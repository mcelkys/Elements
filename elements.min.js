class Elements{static build(a){const b=document.createElement(a.tag||'div');for(let c in a)this.PROCESSORS.has(c)?this.PROCESSORS.get(c)(b,a[c]):'tag'!==c&&b.setAttribute(c,a[c]);return b}static buildFragment(a){const b=document.createDocumentFragment();for(let c of a)b.appendChild(this.build(c));return b}static removeAllChildren(a){const b=a.childNodes;for(let c=b.length-1;0<=c;c--)a.removeChild(b[c])}}Elements.PROCESSORS=new Map([['attributes',function(a,b){for(let c in b)a.setAttribute(c,b[c])}],['listeners',function(a,b){for(let c in b)a.addEventListener(c,b[c])}],['children',function(a,b){a.appendChild(Elements.buildFragment(b))}],['text',function(a,b){a.appendChild(document.createTextNode(b))}],['style',function(a,b){for(let c in b)a.style.setProperty(c,b[c])}],['elements',function(a,b){const c=document.createDocumentFragment();for(let d of b)c.appendChild(d);a.appendChild(c)}],['renderTo',function(a,b){b.appendChild(a)}],['class',function(a,b){a.classList.add(...b.split(' '))}],['set',function(a,b){for(let c in b)a[c]=b[c]}]]);
